[web]
# Address on which to expose metrics and web interface
listen-address = :42000
# Path under which to expose metrics
telemetry-path = /metrics
# Path to YAML file with server_user, server_password options for http basic auth (overrides HTTP_AUTH env var)
auth-file = /opt/ss/ssm-client/ssm.yml
# Maximum number of parallel scrape requests. Use 0 to disable.
max-requests = 40
# Path to prometheus web config file (YAML).
config.file = /opt/ss/ssm-client/node_exporter.yml
# A list of enabled TLS 1.0â€“1.2 cipher suites. Check full list at https://github.com/golang/go/blob/master/src/crypto/tls/cipher_suites.go
tls-cipher-suites =
# Minimum TLS version that is acceptable (default: TLS10).
tls-min-version =
# Maximum TLS version that is acceptable (default: TLS13).
tls-max-version =

[runtime]
# The target number of CPUs Go will run on (GOMAXPROCS)
gomaxprocs = 1

[collector]
# Set all collectors to disabled by default.
disable-defaults = false

# Enable the arp collector (default: enabled).
arp = true
# Regexp of arp devices to exclude (mutually exclusive to device-include).
arp.device-exclude = 
# Regexp of arp devices to include (mutually exclusive to device-exclude).
arp.device-include = 
# Use netlink to gather stats instead of /proc/net/arp.
arp.netlink = true

# Enable the bcache collector (default: enabled).
bcache = true
# Expose expensive priority stats.
bcache.priorityStats = 

# Enable the bonding collector (default: enabled).
bonding = true
# Enable the btrfs collector (default: enabled).
btrfs = true
# Enable the buddyinfo collector (default: disabled).
buddyinfo = false
# Enable the cgroups collector (default: disabled).
cgroups = false
# Enable the conntrack collector (default: enabled).
conntrack = true

# Enable the cpu collector (default: enabled).
cpu = true
# Enables metric node_cpu_guest_seconds_total
cpu.guest = true
# Enables metric cpu_info
cpu.info = 
# Filter the `bugs` field in cpuInfo with a value that must be a regular expression
cpu.info.bugs-include = 
# Filter the `flags` field in cpuInfo with a value that must be a regular expression
cpu.info.flags-include = 

# Enable the cpu_vulnerabilities collector (default: disabled).
cpu_vulnerabilities = false
# Enable the cpufreq collector (default: enabled).
cpufreq = true

# Enable the diskstats collector (default: enabled).
diskstats = true
# Regexp of diskstats devices to exclude (mutually exclusive to device-include).
diskstats.device-exclude = ^(ram|loop|fd|(h|s|v|xv)d[a-z]|nvme\d+n\d+p)\d+$
# Regexp of diskstats devices to include (mutually exclusive to device-exclude).
diskstats.device-include = 

# Enable the dmi collector (default: enabled).
dmi = true
# Enable the drbd collector (default: disabled).
drbd = false
# Enable the drm collector (default: disabled).
drm = false
# Enable the edac collector (default: enabled).
edac = true
# Enable the entropy collector (default: enabled).
entropy = true

# Enable the ethtool collector (default: disabled).
ethtool = false
# Regexp of ethtool devices to exclude (mutually exclusive to device-include).
ethtool.device-exclude = 
# Regexp of ethtool devices to include (mutually exclusive to device-exclude).
ethtool.device-include = 
# Regexp of ethtool stats to include.
ethtool.metrics-include = .*

# Enable the fibrechannel collector (default: enabled).
fibrechannel = true
# Enable the filefd collector (default: enabled).
filefd = true

# Enable the filesystem collector (default: enabled).
filesystem = true
# Regexp of filesystem types to exclude for filesystem collector.
filesystem.fs-types-exclude = ^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
# Regexp of mount points to exclude for filesystem collector.
filesystem.mount-points-exclude = ^/(dev|proc|run/credentials/.+|sys|var/lib/docker/.+|var/lib/containers/storage/.+)($|/)
# how long to wait for a mount to respond before marking it as stale
filesystem.mount-timeout = 5s
# how many stat calls to process simultaneously
filesystem.stat-workers = 4

# Enable the hwmon collector (default: enabled).
hwmon = true
# Regexp of hwmon chip to exclude (mutually exclusive to device-include).
hwmon.chip-exclude = 
# Regexp of hwmon chip to include (mutually exclusive to device-exclude).
hwmon.chip-include = 

# Enable the infiniband collector (default: enabled).
infiniband = true
# Enable the interrupts collector (default: disabled).
interrupts = false

# Enable the ipvs collector (default: enabled).
ipvs = true
# Comma separated list for IPVS backend stats labels.
ipvs.backend-labels = local_address,local_port,remote_address,remote_port,proto,local_mark

# Enable the ksmd collector (default: disabled).
ksmd = false
# Enable the lnstat collector (default: disabled).
lnstat = false
# Enable the loadavg collector (default: enabled).
loadavg = true
# Enable the logind collector (default: disabled).
logind = false
# Enable the mdadm collector (default: enabled).
mdadm = true
# Enable the meminfo collector (default: enabled).
meminfo = true
# Enable the meminfo_numa collector (default: disabled).
meminfo_numa = false
# Enable the mountstats collector (default: disabled).
mountstats = false

# Enable the netclass collector (default: enabled).
netclass = true
# Ignore devices where the speed is invalid. This will be the default behavior in 2.x.
netclass.ignore-invalid-speed = 
# Regexp of net devices to ignore for netclass collector.
netclass.ignored-devices = ^$
# Use netlink to gather stats instead of /proc/net/dev.
netclass.netlink = false
# Expose the statistics for each network device, replacing netdev collector.
netclass_rtnl.with-stats = 

# Enable the netdev collector (default: enabled).
netdev = true
# Collect address-info for every device
netdev.address-info = 
# Regexp of net devices to exclude (mutually exclusive to device-include).
netdev.device-exclude = 
# Regexp of net devices to include (mutually exclusive to device-exclude).
netdev.device-include = 
# Use (incompatible) metric names that provide more detailed stats on Linux
netdev.enable-detailed-metrics = 
# Use netlink to gather stats instead of /proc/net/dev.
netdev.netlink = true

# Enable the netstat collector (default: enabled).
netstat = true
# Regexp of fields to return for netstat collector.
netstat.fields = ^(.*_(InErrors|InErrs)|Ip_Forwarding|Ip(6|Ext)_(InOctets|OutOctets)|Icmp6?_(InMsgs|OutMsgs)|TcpExt_(Listen.*|Syncookies.*|TCPSynRetrans|TCPTimeouts)|Tcp_(ActiveOpens|InSegs|OutSegs|OutRsts|PassiveOpens|RetransSegs|CurrEstab)|Udp6?_(InDatagrams|OutDatagrams|NoPorts|RcvbufErrors|SndbufErrors))$

# Enable the network_route collector (default: disabled).
network_route = false
# Enable the nfs collector (default: enabled).
nfs = true
# Enable the nfsd collector (default: enabled).
nfsd = true

# Enable the ntp collector (default: disabled).
ntp = false
# IP TTL to use while sending NTP query
ntp.ip-ttl = 1
# Offset between local clock and local ntpd time to tolerate
ntp.local-offset-tolerance = 1ms
# Max accumulated distance to the root
ntp.max-distance = 3.46608s
# NTP protocol version
ntp.protocol-version = 4
# NTP server to use for ntp collector
ntp.server = 127.0.0.1
# Certify that collector.ntp.server address is not a public ntp server
ntp.server-is-local = false
# UDP port number to connect to on NTP server
ntp.server-port = 123

# Enable the nvme collector (default: enabled).
nvme = true
# Enable the os collector (default: enabled).
os = true

# Enable the perf collector (default: disabled).
perf = false
# perf cache profilers that should be collected
perf.cache-profilers = 
# List of CPUs from which perf metrics should be collected
perf.cpus = 
# disable perf cache profilers
perf.disable-cache-profilers = false
# disable perf hardware profilers
perf.disable-hardware-profilers = false
# disable perf software profilers
perf.disable-software-profilers = false
# perf hardware profilers that should be collected
perf.hardware-profilers = 
# perf software profilers that should be collected
perf.software-profilers = 
# perf tracepoint that should be collected
perf.tracepoint = 

# Regexp of power supplies to ignore for powersupplyclass collector.
powersupply.ignored-supplies = ^$

# Enable the powersupplyclass collector (default: enabled).
powersupplyclass = true
# Enable the pressure collector (default: enabled).
pressure = true
# Enable the processes collector (default: disabled).
processes = false

# Enable the qdisc collector (default: disabled).
qdisc = false
# Regexp of qdisc devices to exclude (mutually exclusive to device-include).
qdisc.device-exclude = 
# Regexp of qdisc devices to include (mutually exclusive to device-exclude).
qdisc.device-include = 
# test fixtures to use for qdisc collector end-to-end testing
qdisc.fixtures = 

# Enable the rapl collector (default: enabled).
rapl = true
# Enables service unit metric unit_start_time_seconds
rapl.enable-zone-label = 

# Enable the runit collector (default: disabled).
runit = false
# Path to runit service directory.
runit.servicedir = /etc/service

# Enable the schedstat collector (default: enabled).
schedstat = true
# Enable the selinux collector (default: enabled).
selinux = true
# Enable the slabinfo collector (default: disabled).
slabinfo = false
# Enable the sockstat collector (default: enabled).
sockstat = true
# Enable the softirqs collector (default: disabled).
softirqs = false
# Enable the softnet collector (default: enabled).
softnet = true

# Enable the stat collector (default: enabled).
stat = true
# Export softirq calls per vector
stat.softirq = false

# Enable the supervisord collector (default: disabled).
supervisord = false
# XML RPC endpoint.
supervisord.url = http://localhost:9001/RPC2

# Enable the sysctl collector (default: disabled).
sysctl = false
# Select sysctl metrics to include
sysctl.include = 
# Select sysctl metrics to include as info metrics
sysctl.include-info = 

# Enable the systemd collector (default: disabled).
systemd = false
# Enables service unit metric service_restart_total
systemd.enable-restarts-metrics = 
# Enables service unit metric unit_start_time_seconds
systemd.enable-start-time-metrics = 
# Enables service unit tasks metrics unit_tasks_current and unit_tasks_max
systemd.enable-task-metrics = 
# Regexp of systemd units to exclude. Units must both match include and not match exclude to be included.
systemd.unit-exclude = .+\.(automount|device|mount|scope|slice)
# Regexp of systemd units to include. Units must both match include and not match exclude to be included.
systemd.unit-include = .+

# Enable the tapestats collector (default: enabled).
tapestats = true
# Regexp of devices to ignore for tapestats.
tapestats.ignored-devices = ^$

# Enable the tcpstat collector (default: disabled).
tcpstat = false

# Enable the textfile collector (default: enabled).
textfile = true
# Directory to read text files with metrics from.
textfile.directory = /opt/ss/ssm-client/textfile-collector

# Enable the thermal_zone collector (default: enabled).
thermal_zone = true
# Enable the time collector (default: enabled).
time = true
# Enable the timex collector (default: enabled).
timex = true
# Enable the udp_queues collector (default: enabled).
udp_queues = true
# Enable the uname collector (default: enabled).
uname = true

# Enable the vmstat collector (default: enabled).
vmstat = true
# Regexp of fields to return for vmstat collector.
vmstat.fields = ^(oom_kill|pgpg|pswp|pg.*fault).*

# Enable the wifi collector (default: disabled).
wifi = false
# test fixtures to use for wifi collector metrics
wifi.fixtures = 

# Enable the xfs collector (default: enabled).
xfs = true
# Enable the zfs collector (default: enabled).
zfs = true
# Enable the zoneinfo collector (default: disabled).
zoneinfo = false

[log]
# Only log messages with the given severity or above. One of: [debug, info, warn, error]
level = info
# Output format of log messages. One of: [logfmt, json]
format = logfmt
